apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: parks-dev
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-12-25T15:16:33Z
    creationTimestamp: null
    generation: 11
    labels:
      build: mlbparks
    name: mlbparks
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/mlbparks:0.0
      generation: 11
      importPolicy: {}
      name: "0.0"
      referencePolicy:
        type: Source
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/mlbparks:0.0-0
      generation: 10
      importPolicy: {}
      name: 0.0-0
      referencePolicy:
        type: Source
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/mlbparks:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-12-25T15:17:03Z
    creationTimestamp: null
    generation: 13
    labels:
      build: nationalparks
    name: nationalparks
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/nationalparks:0.0
      generation: 13
      importPolicy: {}
      name: "0.0"
      referencePolicy:
        type: Source
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/nationalparks:0.0-0
      generation: 12
      importPolicy: {}
      name: 0.0-0
      referencePolicy:
        type: Source
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/nationalparks:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-12-25T15:17:15Z
    creationTimestamp: null
    generation: 11
    labels:
      build: parksmap
    name: parksmap
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/parksmap:0.0
      generation: 11
      importPolicy: {}
      name: "0.0"
      referencePolicy:
        type: Source
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/parksmap:0.0-0
      generation: 10
      importPolicy: {}
      name: 0.0-0
      referencePolicy:
        type: Source
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/4d09-parks-dev/parksmap:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: mlbparks
      type: parksmap-backend
    name: mlbparks
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mlbparks
      deploymentconfig: mlbparks
      type: parksmap-backend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        post:
          execNewPod:
            command:
            - curl
            - http://mlbparks.4d09-parks-dev.svc:8080/ws/data/load/
            containerName: mlbparks
          failurePolicy: Ignore
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks
          deploymentconfig: mlbparks
          type: parksmap-backend
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: APPNAME
                name: mlbparks-config
          image: docker-registry.default.svc:5000/4d09-parks-dev/mlbparks:0.0-0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mlbparks
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 1
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mongodb-persistent
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: mongodb
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mongodb
          image: docker-registry.default.svc:5000/openshift/mongodb@sha256:8fea1e4a7f3ae48a2e49b74eaa23b919cb7f4ce1d2a2037fc612769116c1e4e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: nationalparks
      type: parksmap-backend
    name: nationalparks
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: nationalparks
      deploymentconfig: nationalparks
      type: parksmap-backend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        post:
          execNewPod:
            command:
            - curl
            - http://nationalparks.4d09-parks-dev.svc:8080/ws/data/load/
            containerName: nationalparks
          failurePolicy: Ignore
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: nationalparks
          deploymentconfig: nationalparks
          type: parksmap-backend
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: APPNAME
                name: nationalparks-config
          image: docker-registry.default.svc:5000/4d09-parks-dev/nationalparks:0.0-0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nationalparks
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: parksmap
    name: parksmap
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: parksmap
      deploymentconfig: parksmap
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: parksmap
          deploymentconfig: parksmap
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: APPNAME
                name: parksmap-config
          image: docker-registry.default.svc:5000/4d09-parks-dev/parksmap:0.0-0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: parksmap
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: mlbparks
      type: parksmap-backend
    name: mlbparks
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mlbparks
      deploymentconfig: mlbparks
      type: parksmap-backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}
    creationTimestamp: null
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: nationalparks
      type: parksmap-backend
    name: nationalparks
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: nationalparks
      deploymentconfig: nationalparks
      type: parksmap-backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: parksmap
    name: parksmap
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: parksmap
      deploymentconfig: parksmap
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: mlbparks
      type: parksmap-backend
    name: mlbparks
  spec:
    host: mlbparks-4d09-parks-dev.apps.na311.openshift.opentlc.com
    port:
      targetPort: 8080
    to:
      kind: Service
      name: mlbparks
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-25T15:33:43Z
        status: "True"
        type: Admitted
      host: mlbparks-4d09-parks-dev.apps.na311.openshift.opentlc.com
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: nationalparks
      type: parksmap-backend
    name: nationalparks
  spec:
    host: nationalparks-4d09-parks-dev.apps.na311.openshift.opentlc.com
    port:
      targetPort: 8080
    to:
      kind: Service
      name: nationalparks
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-25T15:33:43Z
        status: "True"
        type: Admitted
      host: nationalparks-4d09-parks-dev.apps.na311.openshift.opentlc.com
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: parksmap
    name: parksmap
  spec:
    host: parksmap-4d09-parks-dev.apps.na311.openshift.opentlc.com
    port:
      targetPort: 8080
    to:
      kind: Service
      name: parksmap
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-25T15:33:43Z
        status: "True"
        type: Admitted
      host: parksmap-4d09-parks-dev.apps.na311.openshift.opentlc.com
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}
- apiVersion: v1
  data:
    database-admin-password: YWRtaW4xMjM=
    database-name: cGFya3M=
    database-password: bW9uZ29kYg==
    database-user: bW9uZ29kYg==
  kind: Secret
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-admin_password: '{.data[''database-admin-password'']}'
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: null
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  type: Opaque
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: mlbparks
    name: mlbparks
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mlbparks:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: jboss-eap70-openshift:1.7
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: -igL5r0i5ipVYj_q9PKD
      type: GitHub
    - generic:
        secret: rO5m8wQsDHfSavjOPZiC
      type: Generic
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: nationalparks
    name: nationalparks
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: nationalparks:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: GcaKLzMxCJc-MisXkINK
      type: GitHub
    - generic:
        secret: HuMVHdFM9uztAcH4qO5d
      type: Generic
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: parksmap
    name: parksmap
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: parksmap:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: qOk3YRGlHnTsJUn3rG8t
      type: GitHub
    - generic:
        secret: hQffV9BcxMvx8EcXs0qi
      type: Generic
  status:
    lastVersion: 0
- apiVersion: v1
  data:
    APPNAME: MLB Parks (Dev)
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mlbparks-config
- apiVersion: v1
  data:
    APPNAME: National Parks (Dev)
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: nationalparks-config
- apiVersion: v1
  data:
    APPNAME: ParksMap (Dev)
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: parksmap-config
